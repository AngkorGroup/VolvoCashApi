// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using VolvoCash.Data.MainContext;

namespace VolvoCash.DistributedServices.MainContext.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20221107170125_RenameMappingColumns")]
    partial class RenameMappingColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("BankAccountTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("BankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CCI")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DealerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountTypeId");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DealerId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("BankAccountTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankBankAccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankAccountTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("BankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Equivalence")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountTypeId");

                    b.HasIndex("BankId");

                    b.ToTable("BankBankAccountTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Equivalence")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("BankCurrencies");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankDocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Equivalence")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("BankDocumentTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessAreaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CardId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CardTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ClientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ContactId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DealerCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DealerName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("ExpiresAtExtent")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LineContent")
                        .HasColumnType("NCLOB")
                        .HasMaxLength(4000);

                    b.Property<int?>("RechargeTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPChasis")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TPContractBatchNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("TPContractDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("TPContractNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TPInvoiceCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("TPInvoiceDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("TPReason")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessAreaId");

                    b.HasIndex("CardId");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactId");

                    b.HasIndex("RechargeTypeId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.BatchError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("NVARCHAR2(300)")
                        .HasMaxLength(300);

                    b.Property<string>("FileName")
                        .HasColumnType("NVARCHAR2(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LineContent")
                        .HasColumnType("NCLOB")
                        .HasMaxLength(4000);

                    b.Property<int>("RowIndex")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("BatchErrors");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.BatchMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MovementId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("MovementId");

                    b.ToTable("BatchMovements");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BusinessAreaAgg.BusinessArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("BusinessAreas");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("CardTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<int>("ContactId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CardTypeId");

                    b.HasIndex("ContactId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CardId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("CardId");

                    b.ToTable("CardBatches");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Term")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CardTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchesDetail")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CardId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CashierId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ChargeType")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HasBeenRefunded")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("LiquidationId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("OperationCode")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("OperationDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("CashierId");

                    b.HasIndex("LiquidationId");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("ChargeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("TransferId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ChargeId");

                    b.HasIndex("TransferId");

                    b.ToTable("Movements");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("DestinyCardId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("OperationCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<int>("OriginCardId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("DestinyCardId");

                    b.HasIndex("OriginCardId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.ClientAgg.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(11)")
                        .HasMaxLength(11);

                    b.Property<int?>("SectorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.ContactAgg.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ClientId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("ContactParentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("HasSignedIn")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContactParentId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Symbol")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.DealerAgg.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ContactName")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MaxCashiers")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(11)")
                        .HasMaxLength(11);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Zone")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Dealers");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.DocumentTypeAgg.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SUNATCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.LiquidationAgg.Liquidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ChargesCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CompanyBankAccount")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("DealerBankAccount")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("DealerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("LiquidationStatus")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("RefundId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Voucher")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("DealerId");

                    b.HasIndex("RefundId");

                    b.ToTable("Liquidations");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.Mapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Company")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Date")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Feeder")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("File")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Filler")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("MappingNumber")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ReceiverComponentID")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ReceiverLogicalID")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SenderComponentID")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SenderLogicalID")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Type")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Version")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Mappings");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.MappingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("BusinessArea")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Classification")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Company")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CostCenter")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Customer")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocText")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Line")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("LineType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<int>("MappingHeaderId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Market")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("MoreInfo")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PostKey")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ProductModel")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ProfitCenter")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RecordType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Reference")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Sign")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TaxAmount")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TaxCode")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TradePartner")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("MappingHeaderId");

                    b.ToTable("MappingDetails");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.MappingHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Company")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Control")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Currency")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentDate")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentHeader")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DocumentType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ExchangeRate")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ExchangeRateFromFactor")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ExchangeRateToFactor")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ExchangeRateType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("IntercompanyNumber")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MappingId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PostDate")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("PostingPeriod")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("RecordType")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Reference")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ReversalDate")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ReversalReason")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TradingPartner")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("TranslationDate")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .HasColumnType("NVARCHAR2(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("MappingId");

                    b.ToTable("MappingHeaders");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MenuAgg.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("MenuParentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Order")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("MenuParentId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RechargeTypeAgg.RechargeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("RechargeTypes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RefundAgg.Refund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankAccountId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("CompanyBankAccount")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("LiquidationsCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("RefundStatus")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Voucher")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.RoleAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleAdmins");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.RoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("MenuId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenus");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.SMSCodeAgg.SMSCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("DateTimeUsed")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("ItWasAlreadyUsed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("SMSCodes");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.SectorAgg.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("CashierId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DealerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Phone")
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("DealerId");

                    b.HasIndex("UserId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Cashier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchiveAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("DealerId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Imei")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(400)")
                        .HasMaxLength(400);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TPCode")
                        .HasColumnType("NVARCHAR2(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.HasIndex("UserId");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.ResetPasswordToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("AdminId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("CashierId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Token")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CashierId");

                    b.ToTable("ResetPasswordTokens");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("PushDeviceToken")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Type")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccount", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccountType", "BankAccountType")
                        .WithMany()
                        .HasForeignKey("BankAccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAgg.Bank", "Bank")
                        .WithMany("BankAccounts")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DealerAgg.Dealer", "Dealer")
                        .WithMany("BankAccounts")
                        .HasForeignKey("DealerId");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankBankAccountType", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccountType", "BankAccountType")
                        .WithMany("BankBankAccountTypes")
                        .HasForeignKey("BankAccountTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAgg.Bank", "Bank")
                        .WithMany("BankBankAccountTypes")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankCurrency", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAgg.Bank", "Bank")
                        .WithMany("BankCurrencies")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                        .WithMany("BankCurrencies")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BankAgg.BankDocumentType", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAgg.Bank", "Bank")
                        .WithMany("BankDocumentTypes")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DocumentTypeAgg.DocumentType", "DocumentType")
                        .WithMany("BankDocumentTypes")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.Batch", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BusinessAreaAgg.BusinessArea", "BusinessArea")
                        .WithMany()
                        .HasForeignKey("BusinessAreaId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "Card")
                        .WithMany("Batches")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardType", "CardType")
                        .WithMany()
                        .HasForeignKey("CardTypeId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.ClientAgg.Client", "Client")
                        .WithMany("Batches")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.ContactAgg.Contact", "Contact")
                        .WithMany("Batches")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.RechargeTypeAgg.RechargeType", "RechargeType")
                        .WithMany()
                        .HasForeignKey("RechargeTypeId");

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("BatchId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("BatchId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Batches");

                            b1.WithOwner()
                                .HasForeignKey("BatchId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Balance", b1 =>
                        {
                            b1.Property<int>("BatchId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("BatchId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Batches");

                            b1.WithOwner()
                                .HasForeignKey("BatchId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.BatchMovement", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.Batch", "Batch")
                        .WithMany("BatchMovements")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Movement", "Movement")
                        .WithMany("BatchMovements")
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("BatchMovementId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("BatchMovementId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("BatchMovements");

                            b1.WithOwner()
                                .HasForeignKey("BatchMovementId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardType", "CardType")
                        .WithMany("Cards")
                        .HasForeignKey("CardTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.ContactAgg.Contact", "Contact")
                        .WithMany("Cards")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Balance", b1 =>
                        {
                            b1.Property<int>("CardId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("CardId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Cards");

                            b1.WithOwner()
                                .HasForeignKey("CardId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardBatch", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BatchAgg.Batch", "Batch")
                        .WithMany("CardBatches")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "Card")
                        .WithMany("CardBatches")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Balance", b1 =>
                        {
                            b1.Property<int>("CardBatchId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("CardBatchId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("CardBatches");

                            b1.WithOwner()
                                .HasForeignKey("CardBatchId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.CardType", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Charge", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "Card")
                        .WithMany("Charges")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Cashier", "Cashier")
                        .WithMany("Charges")
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.LiquidationAgg.Liquidation", "Liquidation")
                        .WithMany("Charges")
                        .HasForeignKey("LiquidationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("ChargeId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("ChargeId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Charges");

                            b1.WithOwner()
                                .HasForeignKey("ChargeId");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Movement", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "Card")
                        .WithMany("Movements")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Charge", "Charge")
                        .WithMany("Movements")
                        .HasForeignKey("ChargeId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Transfer", "Transfer")
                        .WithMany("Movements")
                        .HasForeignKey("TransferId");

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("MovementId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("MovementId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Movements");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("MovementId");
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Transfer", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "DestinyCard")
                        .WithMany("DestinyTransfers")
                        .HasForeignKey("DestinyCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Card", "OriginCard")
                        .WithMany("OriginTransfers")
                        .HasForeignKey("OriginCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("TransferId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("TransferId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Transfers");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("TransferId");
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.ClientAgg.Client", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.SectorAgg.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.ContactAgg.Contact", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.ClientAgg.Client", "Client")
                        .WithMany("Contacts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.ContactAgg.Contact", "ContactParent")
                        .WithMany("ContactChildren")
                        .HasForeignKey("ContactParentId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DocumentTypeAgg.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.LiquidationAgg.Liquidation", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DealerAgg.Dealer", "Dealer")
                        .WithMany()
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.RefundAgg.Refund", "Refund")
                        .WithMany("Liquidations")
                        .HasForeignKey("RefundId");

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("LiquidationId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("LiquidationId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Liquidations");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("LiquidationId");
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.MappingDetail", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.MappingHeader", "MappingHeader")
                        .WithMany("MappingDetails")
                        .HasForeignKey("MappingHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.MappingHeader", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.MappingAgg.Mapping", "Mapping")
                        .WithMany("MappingHeaders")
                        .HasForeignKey("MappingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.MenuAgg.Menu", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.MenuAgg.Menu", "MenuParent")
                        .WithMany("MenuChildren")
                        .HasForeignKey("MenuParentId");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RefundAgg.Refund", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.BankAccountAgg.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("VolvoCash.Domain.MainContext.Aggregates.CardAgg.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("RefundId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("NUMBER(10)")
                                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrencyId")
                                .HasColumnType("NUMBER(10)");

                            b1.Property<double>("Value")
                                .HasColumnType("BINARY_DOUBLE");

                            b1.HasKey("RefundId");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("Refunds");

                            b1.HasOne("VolvoCash.Domain.MainContext.Aggregates.CurrencyAgg.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("RefundId");
                        });
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.RoleAdmin", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Admin", "Admin")
                        .WithMany("RoleAdmins")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.Role", "Role")
                        .WithMany("RoleAdmins")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.RoleMenu", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.MenuAgg.Menu", "Menu")
                        .WithMany("RoleMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.RoleAgg.Role", "Role")
                        .WithMany("RoleMenus")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Admin", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Cashier", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DealerAgg.Dealer", "Dealer")
                        .WithMany()
                        .HasForeignKey("DealerId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.User", "User")
                        .WithMany("Admins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Cashier", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.DealerAgg.Dealer", "Dealer")
                        .WithMany("Cashiers")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.User", "User")
                        .WithMany("Cashiers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.ResetPasswordToken", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Cashier", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierId");
                });

            modelBuilder.Entity("VolvoCash.Domain.MainContext.Aggregates.UserAgg.Session", b =>
                {
                    b.HasOne("VolvoCash.Domain.MainContext.Aggregates.UserAgg.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
